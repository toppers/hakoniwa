<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hakoniwa</title><link>https://toppers.github.io/hakoniwa/en/</link><description>Recent content on Hakoniwa</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://toppers.github.io/hakoniwa/en/index.xml" rel="self" type="application/rss+xml"/><item><title>Technical Background</title><link>https://toppers.github.io/hakoniwa/en/docs/background/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toppers.github.io/hakoniwa/en/docs/background/</guid><description>The Internet of Things (IoT) is the mixed martial art of information technology. It is because IoT systems are composed of diverse and large numbers of information devices that are intricately intertwined through network communications, requiring many engineers from various technical fields to gather together and pool their wisdom to build an IoT system.
Consider, as an example, an autonomous driving system. It crosses various technical domains as follows.
Embedded Systems Development of autonomous determination software for driving Development of communication system between ECUs Control Systems Development of ECU hardware to control mechanical and electrical systems IT &amp;amp; Network Development of Web UI and smartphone applications Management and maintenance of cloud servers for statistical processing of big data Realization of efficient inter-vehicle and inter-device communication control application Systems Development of vehicle assignment management and traffic flow management applications However, we face the following challenges to realizing such an IoT system.</description></item><item><title>Concept</title><link>https://toppers.github.io/hakoniwa/en/docs/concept/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toppers.github.io/hakoniwa/en/docs/concept/</guid><description>The concept of Hakoniwa is &amp;ldquo;Put mixed things as you like, and try various concepts with ease !&amp;rdquo;
We provide a virtual environment, which makes it easy to combine and demonstrate different software and services when developing IoT, automated driving systems, cloud robotics systems, etc.
We envision a use scenario where engineers from diverse fields gather to develop IoT systems. The &amp;ldquo;box&amp;rdquo; simulates the events and states of complex federated IoT systems according to the desired scenario.</description></item><item><title>Our Goal</title><link>https://toppers.github.io/hakoniwa/en/docs/aimat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toppers.github.io/hakoniwa/en/docs/aimat/</guid><description>Our goal is to establish a simulation environment and ecosystem for engineers who develop/provide massive and complex IoT systems.
Hakoniwa&amp;rsquo;s target is an information system with various devices connected by a network. We envision IoT applications in various fields, such as autonomous driving, logistics, and space development.
Hakoniwa targets the following users
System developers: engineers who develop IoT systems and their components Service providers: Engineers who promote the provision of system services using the IoT.</description></item><item><title>Hakoniwa Core</title><link>https://toppers.github.io/hakoniwa/en/docs/core/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toppers.github.io/hakoniwa/en/docs/core/</guid><description>The four core functions of Hakoniwa are as follows.
Scheduling Synchronization and Communication Time Management Asset Management Also, we believe that the following functional characteristics are essential for Hakoniwa&amp;rsquo;s core functions.
Componentization Visualization Event Driven Automation The core functions and functional characteristics of Hakoniwa are still under design study in the WG while developing the prototype model. We will add more details as we progress.</description></item><item><title>Underlying technology</title><link>https://toppers.github.io/hakoniwa/en/docs/technical/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toppers.github.io/hakoniwa/en/docs/technical/</guid><description>TOPPERS Kernel Developed by the TOPPERS Project, it is an open-source real-time kernel that extends the standard profile of the µITRON4.0 specification. It primarily targeted embedded systems that require high reliability, safety, and real-time performance.
Athrill The CPU instruction set simulator is the core of Hakoniwa. Members of Hokoniwa WG mainly develop it. It enables debugging and functional verification of the behavior of embedded microcontrollers and peripherals at the instruction level.</description></item><item><title>Roadmap</title><link>https://toppers.github.io/hakoniwa/en/docs/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toppers.github.io/hakoniwa/en/docs/roadmap/</guid><description>Hokoniwa WG is working on &amp;ldquo;big goals, little by little.&amp;rdquo;
Our current main activity is to create prototype models to realize the concept and to examine the technology. All of these R&amp;amp;D results are released as OSS. We desire continuous maturation of the core technologies and expansion of the various functions of Hakoniwa by sharing each prototype model and receiving feedback on it.
The Hakoniwa Project is engaged in research and development, first constructing and disseminating educational packages and then expanding into product development.</description></item><item><title>Microcomputer-controlled robot simulation</title><link>https://toppers.github.io/hakoniwa/en/prototypes/single-robot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toppers.github.io/hakoniwa/en/prototypes/single-robot/</guid><description>This is a Hakoniwa prototype model with one SBC, designed based on the challenges of ET Robocon. This prototype can verify by linking the program&amp;rsquo;s behavior on the embedded microcontroller with the robot&amp;rsquo;s behavior.
Design intent from a technical study perspective Study on how to integrate between physical simulators and microcomputer simulators Study of time synchronization between different simulators Other design intent Promote Hakoniwa to ET Robot contenst participants (PR activities) Installation &amp;amp; Usage A trial package with minimal configuration and procedures is available in the GitHub repository below.</description></item><item><title>ROS controlled robot simulation</title><link>https://toppers.github.io/hakoniwa/en/prototypes/ros-robot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toppers.github.io/hakoniwa/en/prototypes/ros-robot/</guid><description>This prototype model uses ROS/ROS2 to collaborate with multiple and single robots. This prototype is lighter than Gazebo, often used with ROS, and allows for easy customization of robots and environments in Unity and the introduction of URDF format models.
Design intent from a technical study perspective Running simulations using ROS, which is commonly used for robot control Study on how to coordinate with other robots Other design intent Introduce robots controlled by ROS to create a simulation environment that mixes multiple control mechanisms Installation &amp;amp; Usage A trial package with minimal configuration and procedures is available in the GitHub repository below.</description></item><item><title>Simulation of collaborative operation of multiple robots</title><link>https://toppers.github.io/hakoniwa/en/prototypes/multi-robot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toppers.github.io/hakoniwa/en/prototypes/multi-robot/</guid><description>This prototype model simulates multiple robots and control programs in the same environment. This prototype uses Unity&amp;rsquo;s Photon library to synchronize multiple Unity environments and even time synchronization among assets and uses VR technology to dive into the simulation environment for verification.
Design intent from a technical study perspective Study of methods of collaboration in multiple environments (e.g., simulation time synchronization) Study on how visualize communication among Hakoniwa assets (including ROS/ROS2 collaboration)/ROS2連携含む） Study of mechanisms to augment Hakoniwa assets Other design intent Promote Hakoniwa to the ROS user base (PR activities) Installation &amp;amp; Usage Various demos are available at the following Github repository.</description></item><item><title>Simulation of inter-robot cooperative operation</title><link>https://toppers.github.io/hakoniwa/en/prototypes/harmony-robot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toppers.github.io/hakoniwa/en/prototypes/harmony-robot/</guid><description>This is a Hakoniwa prototype model for integration of cloud computing and robotics.
Design intent from a technical study perspective Study of specific methods of cloud computing integration Study on how to coordinate with other robots (challenge to more complex robot operation/interference) Study of mechanisms to augment Hakoniwa assets Other design intent Interaction with RDBOX ( establish a track record of Hakoniwa as a development virtual environment) Promote Hakoniwa to the RDBOX user base (PR activities) The prototype model is currently under development.</description></item><item><title>Repository List</title><link>https://toppers.github.io/hakoniwa/en/repositories/</link><pubDate>Wed, 26 Aug 2020 15:09:42 +0900</pubDate><guid>https://toppers.github.io/hakoniwa/en/repositories/</guid><description>Hakoniwa Links Outline hakoniwa Repository for general support handling and content management of this website hakoniwa-single_robot Package that can try Hakoniwa Prototype Model A: Simulator for Single Robot with minimum configuration and procedures hakoniwa-ros2sim Environment for easy simulation of ROS 2 programs on Hakoniwa hakoniwa-core Repository for prototype development of Hakoniwa Core Function Athrill Links Outline athrill Athrill core (target-independent part) athrill-device athrill device for external shared library. athrill-target-v850e2m v850e2m Target dependencies for Athrill athrill-target-ARMv7-A ARMv7-A Target dependencies for Athrill athrill-target-rh850f1x rh850f1x Target dependencies for Athrill athrill-gcc-v850e2m gcc package for Athrill V850E2M target TOPPERS kernel Links Outline ev3rt-athrill-v850e2m V850E2M version of TOPPERS/EV3RT platform for Athrill ev3rt-athrill-ARMv7-A Arm v7-A version of TOPPERS/EV3RT platform for Athrill asp-athrill-mbed Package of TOPPERS/ASP kernel and Mbed library for Athrill Unity Links Outline hakoniwa-Unity-Package Unity Asset Package for Hakoniwa mROS Links Outline mROS A lightweight runtime environment of ROS 1 nodes onto embedded devices mROS 2 A lightweight runtime environment of ROS 1 nodes onto embedded devices Samples Links Outline hakoniwa-scenario-samples Sample collection of Hakoniwa behavior scenarios</description></item><item><title>SNS &amp; Contact</title><link>https://toppers.github.io/hakoniwa/en/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toppers.github.io/hakoniwa/en/contact/</guid><description>Invitation to Hakoniwa WG We welcome the participation of those who agree with the purpose of the Hakoniwa WG. If you would like to participate in discussions on Slack, have requests for our activities, develop core technologies and assets, or utilize the technical outcomes of the Hakoniwa WG and employ them in product development, etc., don&amp;rsquo;t hesitate to get in touch with us.
Email: hakoniwa.toppers_at_gmail.com (Replace _at_ with @) Hakoniwa Forum: Technical questions and discussions We maintain GitHub Discussions as a social networking site for developers, engineers, and users involved in Hakoniwa.</description></item></channel></rss>